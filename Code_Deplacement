#include <stdio.h>
#include <stdlib.h>
#include <allegro.h>

///Meilleurs disposition de code actuelle


void initialistionAllegro()
{
    allegro_init();
    set_color_depth(desktop_color_depth());
    if((set_gfx_mode(GFX_AUTODETECT_WINDOWED,800,600,0,0))!=0)
    {
        allegro_message("Pb de mode graphique");
        allegro_exit();
        exit(EXIT_FAILURE);
    }
    install_keyboard();
    install_mouse();
}

void rect(BITMAP *bmp, int x1, int y1, int x2, int y2, int color);
void rectfill(BITMAP *bmp, int x1, int y1, int x2, int y2, int color);


typedef struct cases{

    //coordonnees de la case
    float x;
    float y;

    //Tailles d'une case
    int longueur;
    int largeur;

    //1 si occupe/obstacle et 0 si libre
    int libre;

    //pour ce qui se trouve sur la case utile ?
    BITMAP * image;

}t_case;

void initPlateau(t_case plateau[13][9])//)
{
    ///plateau = (t_case*) malloc(sizeof(t_case));
    //BITMAP * buffer= create_bitmap(SCREEN_W,SCREEN_H);
    int i = 0;
    int j = 0;
    float valeur_x=0,valeur_y=66.67;
    //t_case * plateau[12][8];

    for (i=0; i<13; i++) //longueur
    {
        //plateau[i][j].x = plateau[i][j].x;
        for (j=0; j<9; j++) //largeur
        {
            plateau[i][j].x = plateau[i][j].x + valeur_x;
            plateau[i][j].longueur = 5;
        }
        valeur_x= valeur_x + 66.5;
        for (j=0; j<9; j++) //largeur
        {
            plateau[i][j].y = valeur_y;
            valeur_y = valeur_y + 66.67;
            plateau[i][j].libre = 0;
            plateau[i][j].largeur = 5;
        }
        valeur_y=66.67;


    }
    ///Blindage du a un bug
    plateau[3][7].x = 199.5;
    plateau[0][2].x = 0;
    plateau[2][5].x = 133;
    plateau[3][0].x = 199.5;
    plateau[5][0].x = 266;
    plateau[10][1].x = 665;
    //plateau[0][0].x = 66.5;
    plateau[0][0].x = 0;
    ///plateau[12][8].x;

    ///Initialisation des Cases remplis
    plateau[7][0].libre=1;
    plateau[8][0].libre=1;
    plateau[4][3].libre=1;
    plateau[4][4].libre=1;
    plateau[12][4].libre=1;
    plateau[1][6].libre=1;
    plateau[3][8].libre=1;
    plateau[8][8].libre=1;
    plateau[9][8].libre=1;
    plateau[12][8].libre=0;
}
/*
void Rectangles(t_case Plateau,int* j, int* i,int r, int b, int g)// BITMAP * buffer)
{
        BITMAP * buffer= create_bitmap(SCREEN_W,SCREEN_H);
        ///Dessus
        rectfill(buffer, Plateau[i-1][j].x,Plateau[i-1][j].y, Plateau[i-1][j].longueur + Plateau[i-1][j].x , Plateau[i-1][j].largeur+Plateau[i-1][j].y, makecol(r,g,b));

        ///Droite
        rectfill(buffer, Plateau[i][j+1].x,Plateau[i][j+1].y, Plateau[i][j+1].longueur +Plateau[i][j+1].x, Plateau[i][j+1].largeur+Plateau[i][j+1].y, makecol(0,255,0));

        ///Centre
        rectfill(buffer, Plateau[i][j].x,Plateau[i][j].y, Plateau[i][j].longueur +Plateau[i][j].x, Plateau[i][j].largeur+Plateau[i][j].y, makecol(255,255,255));

        ///Gauche
        rectfill(buffer, Plateau[i][j-1].x,Plateau[i][j-1].y, Plateau[i][j-1].longueur + Plateau[i][j-1].x, Plateau[i][j-1].largeur+Plateau[i][j-1].y, makecol(255,0,255));

        ///Dessous
        rectfill(buffer, Plateau[i+1][j].x,Plateau[i+1][j].y, Plateau[i+1][j].longueur + Plateau[i+1][j].x, Plateau[i+1][j].largeur+Plateau[i+1][j].y, makecol(100,100,0));
}
*/
int main()
{
    ///Initialisation Allegro
    initialistionAllegro();
    BITMAP * buffer= create_bitmap(SCREEN_W,SCREEN_H);

    BITMAP * Terrain;
    t_case Plateau[13][9];

    initPlateau(Plateau);

    Terrain = load_bitmap("Terrain.bmp",NULL);
    if(!Terrain)
    {
        allegro_message("Pb pas d'image");
        allegro_exit();
        exit(EXIT_FAILURE);
    }

    float valeur_x=66.5;
    float valeur_y=66.67;

    /// BITMAP * Case_Libre; //image case libre
    /// BITMAP * Case_Remplis; // image case remplie (obstacle ou personnage)

    ///Permets de verifier si le tableau à bien été enregistré
    int i = 0;
    int j = 0;

    for (i=0; i<13; i++) //longueur
    {
        for (j=0; j<9; j++) //largeur
        {
            printf("La position x de la case %d x %d est %f et la position y est %f\n",i,j,Plateau[i][j].x,Plateau[i][j].y);
            printf("La case a pour liberte %d \n",Plateau[i][j].libre);
            printf("La case a pour largeur %d et longueur %d \n",Plateau[i][j].largeur,Plateau[i][j].longueur);
        }
    }

    ///Centre d'une case = position x/2 et position y/2

    show_mouse(screen);

    i = 6;
    j = 4;///Personnage ce trouve a la case 6x4 donc i = 6 et J = 4

     while(!key[KEY_ESC])
    {

    textprintf_ex(Terrain,font,0,0,makecol(255,0,255),makecol(0,0,255), "Coordonnées de la souris en ligne : %d et en colonne : %d ",mouse_x,mouse_y);

    clear_bitmap(buffer);

    //blit(Terrain,buffer,0,0,0,68,Terrain->w,Terrain->h);

        ///Position centrale
        /*
    if (mouse_x>=Plateau[i][j].x-66 && mouse_x<=Plateau[i+1][j].x-60 && mouse_y>=Plateau[i-1][j].y-66 && mouse_y<=Plateau[i][j].x-66) //
    {//Clic Gauche
    printf("position centre \n");
    //rest(1000);
    if (mouse_b & 1)
        {
        printf("Le bouton gauche est appuyée (mouvement 0)\n");
        //rest(1000);
        }
    }
    */
    ///Position Droite//
    if (mouse_x>=Plateau[i][j].x&& mouse_y>=Plateau[i][j].y-60 && mouse_y<=Plateau[i][j+1].y-60 && mouse_x<=Plateau[i+1][j].x && Plateau[i+1][j].libre == 0)
    {//Clic Gauche
    printf("Droite\n");
    //rest(1000);
    if (mouse_b & 1)
        {
        printf("Le bouton gauche est appuyée (mouvement droite)\n");
        if (i == 13)
        {
        printf("impossible vous devez faire autre chose");
        i = 12;
        }
        else
        {
        i = i + 1;
        }
        rest(1000);
        }
    }
    ///Position Gauche
    else if (mouse_x<=Plateau[i][j].x-66 && mouse_x>=Plateau[i-1][j].x-66 && mouse_y>=Plateau[i][j-1].y&& mouse_y<=Plateau[i][j].y && Plateau[i-1][j].libre == 0) // //  )
    {//Clic Gauche
    printf("Gauche\n");
    //rest(1000);
    if (mouse_b & 1)
        {
        printf("Le bouton gauche est appuyée (mouvement gauche)\n");
        if (i < 0)
        {
        printf("impossible vous devez faire autre chose");
        i = 0;
        }
        else
        {
        i = i - 1;
        }
        rest(1000);
        }
    }
  ///Position Haute

    else if (mouse_x>=Plateau[i][j].x-66 && mouse_x<=Plateau[i][j].x && mouse_y<=Plateau[i][j-1].y && mouse_y>=Plateau[i][j-2].y&& Plateau[i][j-1].libre ==0)//
    {//Clic Gauche
    printf("Haut\n");
    //rest(1000);
    if (mouse_b & 1)
        {
        printf("Le bouton gauche est appuyée (mouvement haut)\n");
        if (j == 0 )
        {
        printf("impossible vous devez faire autre chose");
        j = 0;
        }
        else
        {
        j = j - 1;
        }
        rest(1000);
        }
    }

    ///Position Basse
    else if (mouse_x<=Plateau[i][j].x && mouse_x>=Plateau[i][j].x-66 && mouse_y<=Plateau[i][j+1].y && mouse_y>=Plateau[i][j-1].y && Plateau[i][j+1].libre ==0)//
    {//Clic Gauche) //
    printf("Bas\n");
    //rest(1000);
    if (mouse_b & 1)
        {
        printf("Le bouton gauche est appuyée (mouvement Bas)\n");
        if (j == 8)
        {
        printf("impossible vous devez faire autre chose");
        j = 8;
        }
        else
        {
        j = j + 1;
        }
        rest(1000);
        }
    }
    else
    {
      printf("hors position disponible\n");
    }

        blit(Terrain,buffer,0,0,0,68,Terrain->w,Terrain->h);

        ///Dessus
        rectfill(buffer, Plateau[i-1][j].x-(valeur_x/2),Plateau[i-1][j].y-(valeur_y/2), (Plateau[i-1][j].longueur + Plateau[i-1][j].x )-(valeur_x/2), (Plateau[i-1][j].largeur+Plateau[i-1][j].y)-(valeur_y/2), makecol(0,0,255));

        ///Droite
        rectfill(buffer, Plateau[i][j+1].x-(valeur_x/2),Plateau[i][j+1].y-(valeur_y/2), (Plateau[i][j+1].longueur +Plateau[i][j+1].x)-(valeur_x/2), (Plateau[i][j+1].largeur+Plateau[i][j+1].y)-(valeur_y/2), makecol(0,255,0));

        ///Centre
        rectfill(buffer, Plateau[i][j].x-(valeur_x/2),Plateau[i][j].y-(valeur_y/2), (Plateau[i][j].longueur +Plateau[i][j].x)-(valeur_x)/2, (Plateau[i][j].largeur+Plateau[i][j].y)-(valeur_y/2), makecol(255,255,255));

        ///Gauche
        rectfill(buffer, Plateau[i][j-1].x-(valeur_x/2),Plateau[i][j-1].y-(valeur_y/2), (Plateau[i][j-1].longueur + Plateau[i][j-1].x)-(valeur_x/2), (Plateau[i][j-1].largeur+Plateau[i][j-1].y)-(valeur_y/2), makecol(255,0,255));

        ///Dessous
        rectfill(buffer, Plateau[i+1][j].x-(valeur_x/2),Plateau[i+1][j].y-(valeur_y/2), (Plateau[i+1][j].longueur + Plateau[i+1][j].x)-(valeur_x/2), (Plateau[i+1][j].largeur+Plateau[i+1][j].y)-(valeur_y/2), makecol(100,100,0));

        ///Affichage Terrain

        //clear_bitmap(Terrain);

        blit(buffer,screen,0,0,0,0,SCREEN_W,SCREEN_H);
        //blit(buffer2,Terrain,0,0,0,0,Terrain->w,Terrain->h);
        //blit(Terrain,buffer,0,0,0,68,Terrain->w,Terrain->h);
    }

    return 0;
}END_OF_MAIN();

